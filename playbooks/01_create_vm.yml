---
- name: Create VM for webserver
  hosts: localhost
  connection: local
  gather_facts: False
  vars:
    image_url: https://cloud-images.ubuntu.com/releases/22.04/release-20240416/ubuntu-22.04-server-cloudimg-amd64.img
    machine_type: BIOS
    source_vm_name: "{{ image_url | split('/') | last }}"
    vm_group: demo_xlab
    vm_name: "{{ vm_group }}-webserver-0"
    vm_ssh_authorized_keys:
      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIE8SNzKoqj89P6Z9kiYEhgbDogY0Y7YXSS68W2B5b2u7 justin_cinkelj@jcnuc
    vm_ssh_import_id: ""

  tasks:
    - name: Create template VM
      ansible.builtin.include_role:
        name: scale_computing.hypercore.url2template
      vars:
        url2template_image_url: "{{ image_url }}"
        url2template_vm_name: "{{ image_url | split('/') | last }}"
        url2template_machine_type: "{{ machine_type }}"
        url2template_operating_system: os_other

    - name: Create VM from template
      ansible.builtin.include_role:
        name: scale_computing.hypercore.template2vm
      vars:
        template2vm_source_vm_name: "{{ source_vm_name }}"
        template2vm_vm_name: "{{ vm_name }}"
        template2vm_description: demo webserver, created from {{ source_vm_name }}
        template2vm_vm_tags:
          - "{{ vm_group }}"
          - ansible_group__{{ vm_group }}
          - ansible_group__demo_webservers
          # If static IP address is used, optionally uncomment this to set ansible_host
          # - ansible_host__{{ vm_network_ip_address }}
        template2vm_vcpu: 2
        template2vm_memory: "{{ '1 GB' | human_to_bytes }}"
        template2vm_disk_size: "{{ '5 GB' | human_to_bytes }}"
        template2vm_nics:
          - type: virtio
        template2vm_power_state: start
        # cloud-init
        template2vm_user_data: "{{ lookup('template', 'user-data.ubuntu-22.04.yml.j2') }}"
        template2vm_meta_data: "{{ lookup('template', 'meta-data.ubuntu-22.04.yml.j2') }}"
        vm_network_mode: dhcp
        vm_network_iface: ens1

    - name: Refresh inventory
      ansible.builtin.meta: refresh_inventory

- name: Wait on VM to boot
  hosts: "{{ vm_group }}"
  gather_facts: False
  vars:
    vm_group: demo_xlab
  tasks:
    - name: Refresh inventory and wait
      ansible.builtin.include_role:
        name: scale_computing.hypercore.template2vm
        tasks_from: wait_vm_boot_tasks.yml
      loop: "{{ range(10) }}"

- name: Show link to webpage
  hosts: "{{ vm_group }}"
  gather_facts: True
    - name: Show webserver URL
      ansible.builtin.debug:
        msg: The website will be soon at http://{{ ansible_default_ipv4.address }}
